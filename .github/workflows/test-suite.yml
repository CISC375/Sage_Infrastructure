name: test-suite

on:
  workflow_call:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql-analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: Build files for CodeQL
        run: |
          npm install
          npm run build || true

      - name: Perform CodeQL Analysis
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}
        uses: github/codeql-action/analyze@v3

  node-ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install required system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++

      - run: npm cache clean --force
      - run: npm ci

      - name: Set config file
        run: cp config.example.ts config.ts

      - name: Build
        run: |
          npm run build 2>&1 | tee build-output.log

          if grep -q "node_modules/discord.js/typings/index.d.ts" build-output.log; then
            echo "Ignoring build errors from node_modules/discord.js/typings/index.d.ts"
            sed -i '/node_modules\/discord\.js\/typings\/index\.d\.ts/d' build-output.log
          fi

          if grep -q "Error" build-output.log; then
            echo "Other build errors found. Failing the workflow."
            exit 1
          fi

          echo "No unignored build errors found. Workflow continues."

      - name: Run ESLint
        run: npm run lint

      - name: Run Jest with coverage
        run: npm test -- --coverage

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  autodoc:
    needs: node-ci
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Set config file
        run: cp config.example.ts config.ts

      - name: Build
        run: npm run build

      - name: Generate docs (autodoc)
        run: |
          chmod +x autodoc/movemd.sh || true
          npm run autodoc || true

  touca-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Debug Python Environment
        run: |
          python --version
          python -m pip --version

      - name: Install TryTouca with Debugging
        run: |
          python -m pip install --upgrade pip
          pip install trytouca --verbose || true

      - name: Install TryTouca from GitHub (Fallback)
        if: failure()
        run: |
          python -m pip install git+https://github.com/trytouca/trytouca-python.git

      - name: Create Virtual Environment (Fallback)
        if: failure()
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install trytouca

      - name: Run Touca smoke test
        run: |
          python - << 'PY'
          try:
              import touca
              print('Touca version:', touca.__version__)
          except Exception as e:
              print('Touca import failed:', e)
          PY

  testlink:
    runs-on: ubuntu-latest

    steps:
      - name: Clone TestLink Repository
        run: |
          git clone https://github.com/TestLinkOpenSourceTRMS/testlink-code.git
          cd testlink-code

      - name: Set up environment for TestLink
        run: |
          sudo apt-get update
          sudo apt-get install -y php mysql-server apache2
          # Additional setup for TestLink dependencies if required

      - name: Run TestLink Setup (placeholder)
        run: |
          echo "TestLink setup placeholder - no test plan configured"
          # php testlink-cli.php --run-tests